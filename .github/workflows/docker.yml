name: docker
on:
  push:
    tags:
      - v*
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      # https://github.com/actions/checkout/releases/tag/v4.1.7
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332
    - name: Prepare tags
      id: tags
      run: |
        export GITHUB_REF='${{ github.ref }}'
        export GITHUB_SHA='${{ github.sha }}'
        export AWS_ECR_URL='${{ secrets.AWS_ECR_URL }}'

        python scripts/github/docker.py
    - name: Set up QEMU
      # https://github.com/docker/setup-qemu-action/releases/tag/v3.2.0
      uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf
    - name: Set up Docker Buildx
      # https://github.com/docker/setup-buildx-action/releases/tag/v3.6.1
      uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db
    - name: Login to DockerHub
      # https://github.com/docker/login-action/releases/tag/v3.3.0
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to AWS ECR
      # https://github.com/docker/login-action/releases/tag/v3.3.0
      uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
      with:
          registry: ${{ secrets.AWS_ECR_URL}}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Build and push
      # https://github.com/docker/build-push-action/releases/tag/v6.15.0
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
      with:
        push: true
        tags: ${{ steps.tags.outputs.tags }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Build and push RabbitMQ image
      # https://github.com/docker/build-push-action/releases/tag/v6.15.0
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
      if: steps.tags.outputs.rabbitmq_tags != ''
      with:
        build-args:
          ENABLE_RABBITMQ=true
        push: true
        tags: ${{ steps.tags.outputs.rabbitmq_tags }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
